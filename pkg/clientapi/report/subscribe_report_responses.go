// Code generated by go-swagger; DO NOT EDIT.

package report

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	clientmodel "gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/clientmodel"
)

// SubscribeReportReader is a Reader for the SubscribeReport structure.
type SubscribeReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubscribeReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewSubscribeReportCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSubscribeReportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSubscribeReportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSubscribeReportCreated creates a SubscribeReportCreated with default headers values
func NewSubscribeReportCreated() *SubscribeReportCreated {
	return &SubscribeReportCreated{}
}

/*SubscribeReportCreated handles this case with default header values.

Subscription successfully created
*/
type SubscribeReportCreated struct {
	Payload clientmodel.SubscriptionResponse
}

func (o *SubscribeReportCreated) Error() string {
	return fmt.Sprintf("[POST /subscriptions/report][%d] subscribeReportCreated  %+v", 201, o.Payload)
}

func (o *SubscribeReportCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeReportBadRequest creates a SubscribeReportBadRequest with default headers values
func NewSubscribeReportBadRequest() *SubscribeReportBadRequest {
	return &SubscribeReportBadRequest{}
}

/*SubscribeReportBadRequest handles this case with default header values.

Invalid input
*/
type SubscribeReportBadRequest struct {
}

func (o *SubscribeReportBadRequest) Error() string {
	return fmt.Sprintf("[POST /subscriptions/report][%d] subscribeReportBadRequest ", 400)
}

func (o *SubscribeReportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubscribeReportInternalServerError creates a SubscribeReportInternalServerError with default headers values
func NewSubscribeReportInternalServerError() *SubscribeReportInternalServerError {
	return &SubscribeReportInternalServerError{}
}

/*SubscribeReportInternalServerError handles this case with default header values.

Internal error
*/
type SubscribeReportInternalServerError struct {
}

func (o *SubscribeReportInternalServerError) Error() string {
	return fmt.Sprintf("[POST /subscriptions/report][%d] subscribeReportInternalServerError ", 500)
}

func (o *SubscribeReportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
