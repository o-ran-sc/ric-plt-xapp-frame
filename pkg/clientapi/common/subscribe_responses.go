// Code generated by go-swagger; DO NOT EDIT.

package common

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"gerrit.o-ran-sc.org/r/ric-plt/xapp-frame/pkg/clientmodel"
)

// SubscribeReader is a Reader for the Subscribe structure.
type SubscribeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubscribeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSubscribeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSubscribeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSubscribeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSubscribeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewSubscribeServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSubscribeCreated creates a SubscribeCreated with default headers values
func NewSubscribeCreated() *SubscribeCreated {
	return &SubscribeCreated{}
}

/*SubscribeCreated handles this case with default header values.

Subscription successfully created
*/
type SubscribeCreated struct {
	Payload *clientmodel.SubscriptionResponse
}

func (o *SubscribeCreated) Error() string {
	return fmt.Sprintf("[POST /subscriptions][%d] subscribeCreated  %+v", 201, o.Payload)
}

func (o *SubscribeCreated) GetPayload() *clientmodel.SubscriptionResponse {
	return o.Payload
}

func (o *SubscribeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(clientmodel.SubscriptionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSubscribeBadRequest creates a SubscribeBadRequest with default headers values
func NewSubscribeBadRequest() *SubscribeBadRequest {
	return &SubscribeBadRequest{}
}

/*SubscribeBadRequest handles this case with default header values.

Not Found
*/
type SubscribeBadRequest struct {
}

func (o *SubscribeBadRequest) Error() string {
	return fmt.Sprintf("[POST /subscriptions][%d] subscribeBadRequest ", 400)
}

func (o *SubscribeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubscribeNotFound creates a SubscribeNotFound with default headers values
func NewSubscribeNotFound() *SubscribeNotFound {
	return &SubscribeNotFound{}
}

/*SubscribeNotFound handles this case with default header values.

Invalid input
*/
type SubscribeNotFound struct {
}

func (o *SubscribeNotFound) Error() string {
	return fmt.Sprintf("[POST /subscriptions][%d] subscribeNotFound ", 404)
}

func (o *SubscribeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubscribeInternalServerError creates a SubscribeInternalServerError with default headers values
func NewSubscribeInternalServerError() *SubscribeInternalServerError {
	return &SubscribeInternalServerError{}
}

/*SubscribeInternalServerError handles this case with default header values.

Internal error
*/
type SubscribeInternalServerError struct {
}

func (o *SubscribeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /subscriptions][%d] subscribeInternalServerError ", 500)
}

func (o *SubscribeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubscribeServiceUnavailable creates a SubscribeServiceUnavailable with default headers values
func NewSubscribeServiceUnavailable() *SubscribeServiceUnavailable {
	return &SubscribeServiceUnavailable{}
}

/*SubscribeServiceUnavailable handles this case with default header values.

Service Unavailable
*/
type SubscribeServiceUnavailable struct {
}

func (o *SubscribeServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /subscriptions][%d] subscribeServiceUnavailable ", 503)
}

func (o *SubscribeServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
